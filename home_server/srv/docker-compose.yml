version: "3.9"
networks:
  gateway:
    driver: bridge
volumes:
  youp0m_static:
    driver: local
  traefik_static:
    driver: local
  owncloud_static:
    driver: local
  redis_owncloud_static:
    driver: local
services:
  traefik:
    image: traefik:v2.9
    ports:
      - 80:80
      - 443:443
    volumes:
      - traefik_static:/srv/
      - ./traefik/traefik.yml:/traefik.yml
      - ./traefik/.htdigest:/srv/.htdigest
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
    networks:
      - gateway
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=home_server_gateway"

      # HTTPS management
      - "traefik.http.routers.traefik.entryPoints=secure"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"

      # Redirect to api@internal (dashboard)
      - "traefik.http.routers.traefik.service=api@internal"

      # Adds a digest authentication
      - "traefik.http.routers.traefik.middlewares=dash-auth"
      - "traefik.http.middlewares.dash-auth.digestauth.usersfile=/srv/.htdigest"
  youp0m:
    image: nemunaire/youp0m:latest
    restart: unless-stopped
    expose:
      - 8080
    volumes:
      - youp0m_static:/srv/static
    networks:
      - gateway
    labels:
      - traefik.enable=true
      - traefik.docker.network=home_server_gateway

      # HTTPS management
      - traefik.http.routers.youp0m.entryPoints=secure
      - traefik.http.routers.youp0m.rule=Host(`youp0m.${DOMAIN}`)
      - traefik.http.routers.youp0m.tls=true
      - traefik.http.routers.youp0m.tls.certresolver=letsencrypt
  netdata:
    image: netdata/netdata:latest
    restart: unless-stopped
    expose:
      - 19999
    volumes:
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    networks:
      - gateway
    labels:
      - traefik.enable=true
      - traefik.docker.network=home_server_gateway

      # HTTPS management
      - traefik.http.routers.netdata.entryPoints=secure
      - traefik.http.routers.netdata.rule=Host(`monitoring.homeserver.${DOMAIN}`)
      - traefik.http.routers.netdata.tls=true
      - traefik.http.routers.netdata.tls.certresolver=letsencrypt
  owncloud:
    image: owncloud/server:10.11
    restart: always
    expose:
      - 8080
    environment:
      - OWNCLOUD_DOMAIN=cloud.${DOMAIN}
      - OWNCLOUD_ADMIN_USERNAME=${OWNCLOUD_USER}
      - OWNCLOUD_ADMIN_PASSWORD=${OWNCLOUD_PASSWORD}
      - OWNCLOUD_REDIS_ENABLED=true
      - OWNCLOUD_REDIS_HOST=redis_owncloud
      - HTTP_PORT=8080
    volumes:
      - owncloud_static:/mnt/data
    networks:
      - gateway
    labels:
      - traefik.enable=true
      - traefik.docker.network=home_server_gateway

      # HTTPS management
      - traefik.http.routers.owncloud.entryPoints=secure
      - traefik.http.routers.owncloud.rule=Host(`cloud.${DOMAIN}`)
      - traefik.http.routers.owncloud.tls=true
      - traefik.http.routers.owncloud.tls.certresolver=letsencrypt
    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - redis_owncloud
  redis_owncloud:
    image: redis:6
    restart: always
    command: ["--databases", "1"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_owncloud_static:/data
    networks:
      - gateway
  gatus:
    image: twinproduction/gatus
    restart: unless-stopped
    expose:
      - 8080
    volumes:
      - ./gatus/config.yaml:/config/config.yaml
    networks:
      - gateway
    labels:
      - traefik.enable=true
      - traefik.docker.network=home_server_gateway

      # HTTPS management
      - traefik.http.routers.devoups.entryPoints=secure
      - traefik.http.routers.devoups.rule=Host(`devoups.${DOMAIN}`)
      - traefik.http.routers.devoups.tls=true
      - traefik.http.routers.devoups.tls.certresolver=letsencrypt
  homer:
    image: b4bz/homer:latest
    restart: unless-stopped
    expose:
      - 8080
    volumes:
      - ./homer/assets/:/www/assets
    networks:
      - gateway
    labels:
      - traefik.enable=true
      - traefik.docker.network=home_server_gateway

      # HTTPS management
      - traefik.http.routers.homer.entryPoints=secure
      - traefik.http.routers.homer.rule=Host(`home.${DOMAIN}`)
      - traefik.http.routers.homer.tls=true
      - traefik.http.routers.homer.tls.certresolver=letsencrypt
