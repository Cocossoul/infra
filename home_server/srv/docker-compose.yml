version: "3.9"
networks:
  gateway:
    driver: bridge
volumes:
  youp0m_static:
    driver: local
  traefik_static:
    driver: local
  prometheus_static:
    driver: local
  grafana_static:
    driver: local
services:
  traefik:
    image: traefik:v2.9
    ports:
      - 80:80
      - 443:443
    volumes:
      - traefik_static:/srv/
      - ./traefik/traefik.yml:/traefik.yml
      - ./traefik/.htdigest:/srv/.htdigest
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - gateway
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=home_server_gateway"

      # HTTPS management
      - "traefik.http.routers.traefik.entryPoints=secure"
      - "traefik.http.routers.traefik.rule=Host(`traefik.corentinpape.com`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"

      # Redirect to api@internal (dashboard)
      - "traefik.http.routers.traefik.service=api@internal"

      # Adds a digest authentication
      - "traefik.http.routers.traefik.middlewares=dash-auth"
      - "traefik.http.middlewares.dash-auth.digestauth.usersfile=/srv/.htdigest"
  youp0m:
    image: nemunaire/youp0m:latest
    expose:
      - 8080
    volumes:
      - youp0m_static:/srv/static
    networks:
      - gateway
    labels:
      - traefik.enable=true
      - traefik.docker.network=home_server_gateway

      # HTTPS management
      - traefik.http.routers.youp0m.entryPoints=secure
      - traefik.http.routers.youp0m.rule=Host(`youp0m.corentinpape.com`)
      - traefik.http.routers.youp0m.tls=true
      - traefik.http.routers.youp0m.tls.certresolver=letsencrypt
  homer:
    image: b4bz/homer:latest
    expose:
      - 8080
    volumes:
      - ./homer/assets/:/www/assets
    networks:
      - gateway
    labels:
      - traefik.enable=true
      - traefik.docker.network=home_server_gateway

      # HTTPS management
      - traefik.http.routers.homer.entryPoints=secure
      - traefik.http.routers.homer.rule=Host(`home.corentinpape.com`)
      - traefik.http.routers.homer.tls=true
      - traefik.http.routers.homer.tls.certresolver=letsencrypt
  grafana:
    image: grafana/grafana-oss:latest
    expose:
      - 3000
    networks:
      - gateway
    volumes:
      - grafana_static:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    labels:
      - traefik.enable=true
      - traefik.docker.network=home_server_gateway

      # HTTPS management
      - traefik.http.routers.grafana.entryPoints=secure
      - traefik.http.routers.grafana.rule=Host(`grafana.corentinpape.com`)
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.tls.certresolver=letsencrypt

      # Adds a digest authentication
      - "traefik.http.routers.grafana.middlewares=dash-auth"
      - "traefik.http.middlewares.dash-auth.digestauth.usersfile=/srv/.htdigest"
  prometheus:
    image: prom/prometheus:latest
    expose:
      - 9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - gateway
    labels:
      - traefik.enable=true
      - traefik.docker.network=home_server_gateway

      # HTTPS management
      - traefik.http.routers.prometheus.entryPoints=secure
      - traefik.http.routers.prometheus.rule=Host(`prometheus.corentinpape.com`)
      - traefik.http.routers.prometheus.tls=true
      - traefik.http.routers.prometheus.tls.certresolver=letsencrypt

      # Adds a digest authentication
      - "traefik.http.routers.prometheus.middlewares=dash-auth"
      - "traefik.http.middlewares.dash-auth.digestauth.usersfile=/srv/.htdigest"
